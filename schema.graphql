type MembershipDao @entity {
    id: ID! # Address of new created Membership DAO
    token: Bytes! # Address of DAO token
    voting: Bytes! # Voting contract address
    users: [User!]! @derivedFrom(field: "dao")
    creator: Bytes!
    totalHolders: BigInt!
}

type Token @entity {
    id: ID! # Token address
    name: String!
    symbol: String!
    decimals: BigInt!
}

type Voting @entity {
    id: ID! # Address of voting contract
    currentVoteLength: BigInt!
    creator: Bytes!
    dao: Bytes!
}

type Vote @entity {
    id: ID! # Address of voting contract + Vote Id
    voteId: BigInt
    startDate: BigInt!
    snapshotBlock: BigInt!
    quorumRequired: BigInt!
    totalYes: BigInt!
    totalNo: BigInt!
    executionScript: Bytes!
    executed: Boolean
    metadata: String!
    executionDate: BigInt!
    creator: Bytes!
}

type UserVote @entity {
    id: ID! # User address + MembershipDAO address + Vote Id
    dao: Bytes!
    voteId: BigInt!
    voted: Boolean
    voteStatus: String
}

type User @entity {
    id: ID! # User address + MembershipDAO address
    dao: MembershipDao!
    userAddress: Bytes!
}

type TransactionInfo @entity { 
    id: ID!
    dao: Bytes!
    voting: Bytes!
    token: Bytes!
}